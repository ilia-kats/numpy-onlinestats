[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind@git+https://github.com/wjakob/nanobind"]
build-backend = "scikit_build_core.build"

[project]
name = "numpy-onlinestats"
dynamic = ["version"]
description = "Online statistics for Numpy arrays."
readme = "README.md"
requires-python = ">=3.10"
authors = [{name="Ilia Kats"}]
maintainers = [{name="Ilia Kats", email="ilia-kats@gmx.net"}]
urls.Documentation = "https://numpy-onlinestats.readthedocs.io/"
urls.Source = "https://github.com/ilia-kats/numpy-onlinestats"
urls.Home-page = "https://github.com/ilia-kats/numpy-onlinestats"
license = {file = "LICENSE"}
dependencies = [
    "numpy"
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering"
]

[project.optional-dependencies]
test = [
    "scipy",
    "pytest",
    "pytest-cov",
]

doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "sphinx>=4",
    "sphinx-book-theme>=1.0.0",
    "sphinx-autodoc-typehints",
    "myst-parser"
]

[tool.scikit-build]
build-dir = "build/{wheel_tag}"
wheel.py-api = "cp312"
ninja.make-fallback = true
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.exclude = [".*"]

[tool.setuptools_scm]
write_to = "src/numpy_onlinestats/_version.py"

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.ruff]
src = ["src"]
line-length = 120
target-version = "py310"
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"docs/*" = ["I", "D"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.cibuildwheel]
skip = "pp*"
archs = ["auto64"]

[tool.cibuildwheel.linux]
build = "*manylinux*"
before-all = [
    "yum-config-manager --add-repo=https://buildlogs.centos.org/c7-devtoolset-12.x86_64/",
    "yum install -y --nogpgcheck devtoolset-12-gcc-c++"
]
environment = {PATH="/opt/rh/devtoolset-12/root/bin:$PATH"}

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
environment = {MACOSX_DEPLOYMENT_TARGET="10.15"}
